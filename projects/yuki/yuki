#!/bin/bash
#there's not really anything here
#I did this so there's at least something in foo
#You should functionize cake and leave, put a loop around the main menu, and add a yes_or_no funtion.
#funtion yes_or_no should accept a string question, and prompt that string with read -p then return 1 for all forms of yes (y,ya,yep,yes) or 0 for all forms of no (n, no, nah)
function number_loop () {
    errors=0
    error_answer="Please return to your class. I hear you're learning how to count today!"
    while [ 1 ]
    do
	read -p "What is your favourite number between 0 and 10?" answer
	case $answer in
	    1) echo "Because you're the best!" ; return 0 ;;
	    2|4|6|8) echo "Even Steven?" ; return 0 ;;
	    3|9) echo "You're an odd one, aren't you?" ; return 0 ;;
	    5) echo "Right in the middle, best of both!" ; return 0 ;;
	    0|10) echo "Of course YOU would choose such a fancy number" ; return 0 ;;
	    7) echo "Feeling lucky, huh?" ; return 0 ;;
            *) echo $error_answer ; ((errors++)) ;;
	esac
	if [ $errors -eq 3 ]
	then error_answer="Are you even trying?" ;
	fi
	if [ $errors -gt 4 ]
	then error_answer="For the love of... Stop fucking with me, yea?" ;
	fi
    done
}

function have_chat () {
    while [ 1 ]
    do
	read -p "Do you want to know something? [y/n]" answer4
	if [[ $answer4 = y ]] ; then
	    echo "today is $(date '+%A %D') !"
	    echo "Thanks for talking to me! Bye!"
	    # Should this be exit or return? Do you want her to go back to the "main menu" after she tells the date?
	   return 
	fi
    done
}

function affirmation () {
    echo "All things are for the eventual best"
    read -n 1 -s -r -p " "
    echo "You've got this"
    read -n 1 -s -r -p " "
    echo "Focus on what you can do"
    echo " You can do anything"
    read -n 1 -s -r -p " "
    echo "You are Smaug"
    read -n 1 -srp " "
    echo "Hakuna Matata"
    echo " It means no worries"
    read -n 1 -srp " "
    echo "Being afraid of things going wrong isn't the way to make things go right"
    echo " You know this"
    read -n 1 -srp " "
    echo "Remember how far you've come, not just how far you have to go. \n You are not where you want to be, but neither are you where you used to \
be"
   
    }

function cake () {
read -p "Do you like cake? [y/n]" answer3
if [[ $answer3 = y ]] ; then
    echo "The cake is a lie"
    echo "$thing2"
    exit
else
    echo "The cake is a lie anyway"
    echo "Which do you like?"
    read -p "Pie IceCream Cookies Candy" answer6
    case $answer6 in
	Pie)
	    echo "Pie  is a fantastic choice!" ;;
	IceCream)
	    echo "IceCream is so cold!" ;;
	Cookies)
	    echo "Anzac, chocolate chip, coconut... There are so many!" ;;
	Candy)
	    echo "Too many varieties of sweets to list, too many to try!" ;;
	*)
	    echo "Is that a dessert?"  ;;
    esac
    echo I like $answer6 too!
fi
return
}

function leave () {
    echo "It will be lonely without you here."
    echo "but if you must..."
    read -p "Must you? (y/n)" answer
    if [[ $answer = y ]] ; then
	exit
    else return 
    fi
    }

thing=Hello
thing2=Goodbye
thing3="See you soon!"
# date= $ date

echo "$thing"
echo "what's your name?"
read varname
echo it\'s nice to meet you $varname
#This would be the start of the "main menu"
echo "Would you like to:"
echo "chat"
echo "affirmation"
echo "math"
echo "cake"
echo "leave"
read -p "Please choose one:" answer8

case $answer8 in
    chat) have_chat ;;		
    math) number_loop ;;
    affirmation) affirmation ;;
    cake) cake ;;
    leave) leave ;;
    #no cake or leave option?
    #should default mean leave, or reprompt?
    *) exit ;;
esac
read -p "Are you leaving me? [y/n]" answer
		 
case $answer in
    ya)
	echo "$thing2"
	exit ;;
    n)
	echo "So you're not leaving?"
	;;
    *)
	echo "Only 'y' or 'n' please."
esac



#    else 
#	echo "I'm glad you stayed."
#	read -p "you should really go though. [y/n]" answer2
#	if [ $answer2 = y ] ; then
#	    echo "$thing3"
#	else
#	    echo "I promise I'll see you again, bye!"
#	    exit
#	fi
 #   fi
